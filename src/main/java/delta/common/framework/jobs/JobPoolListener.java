package delta.common.framework.jobs;

/**
 * Listener for the events generated by a pool of jobs.
 * @author DAM
 */
public interface JobPoolListener
{
  /**
   * Callback method used when a <code>worker</code> starts a <code>job</code>.
   * @param worker Involved worker.
   * @param job Involved job.
   */
  public void jobStarted(Worker worker, Job job);

  /**
   * Callback method used when a <code>worker</code> finishes a <code>job</code>.
   * @param worker Involved worker.
   * @param job Involved job.
   */
  public void jobFinished(Worker worker, Job job);

  /**
   * Callback method used when a <code>job</code> is added to a <code>pool</code> of jobs.
   * @param pool Involved pool.
   * @param job Involved job.
   */
  public void jobAdded(JobPool pool, Job job);

  /**
   * Callback method used when a <code>job</code> is removed from a <code>pool</code> of jobs.
   * @param pool Involved pool.
   * @param job Involved job.
   */
  public void jobRemoved(JobPool pool, Job job);
}
